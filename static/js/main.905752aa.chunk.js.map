{"version":3,"sources":["redux/contacts/contacts-selectors.js","redux/contacts/contacts-action.js","redux/contacts/contacts-operation.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["getItems","state","contacts","items","getFilter","filter","isLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","trim","name","includes","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","Form","useState","setName","number","setNumber","useSelector","selectors","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","className","onSubmit","preventDefault","some","item","alert","a","contact","action","post","data","operations","type","pattern","title","required","onChange","Filter","target","Contacts","useEffect","get","map","id","onClick","contactId","delete","color","height","width","App","createReducer","_","payload","error","message","combineReducers","middleware","getDefaultMiddleware","store","next","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.905752aa.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nexport const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const isLoading = state => state.contacts.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase().trim();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction(\r\n  'contacts/getContactRequest',\r\n);\r\nexport const getContactsSuccess = createAction(\r\n  'contacts/getContactSuccess',\r\n);\r\nexport const getContactsError = createAction(\r\n  'contacts/getContactError',\r\n);\r\n\r\nexport const addContactsRequest = createAction(\r\n  'contacts/addContactRequest',\r\n);\r\nexport const addContactsSuccess = createAction(\r\n  'contacts/addContactSuccess',\r\n);\r\nexport const addContactsError = createAction(\r\n  'contacts/addContactError',\r\n);\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  'contacts/deleteContactsRequest',\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  'contacts/deleteContactsSuccess',\r\n);\r\nexport const deleteContactsError = createAction(\r\n  'contacts/deleteContactsError',\r\n);\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport * as action from './contacts-action';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  dispatch(action.getContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(action.getContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(action.getContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  async dispatch => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(action.addContactsRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      dispatch(action.addContactsSuccess(data));\r\n    } catch (error) {\r\n      dispatch(action.addContactsError);\r\n    }\r\n  };\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n  dispatch(action.deleteContactsRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(action.deleteContactsSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(action.deleteContactsError(error));\r\n  }\r\n};\r\n","import './Form.css';\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as selectors from '../../redux/contacts/contacts-selectors';\r\nimport * as operations from '../../redux/contacts/contacts-operation';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const items = useSelector(selectors.getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (items.some(item => item.name === name)) {\r\n      alert('Contact already exist in contact list');\r\n      return;\r\n    }\r\n\r\n    dispatch(operations.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"submit__form\" onSubmit={handleSubmit}>\r\n      <label className=\"form__label\">\r\n        <h3>Name</h3>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className=\"form__label\">\r\n        <h3>Number</h3>\r\n        <input\r\n          className=\"form__input\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button className=\"form__button\" type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import './Filter.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as action from '../../redux/contacts/contacts-action';\r\nimport * as selectors from '../../redux/contacts/contacts-selectors';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(selectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label>\r\n      <h3>Find contact by name</h3>\r\n      <input\r\n        className=\"filter__input\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => dispatch(action.changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import './Contacts.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as operations from '../../redux/contacts/contacts-operation';\r\nimport * as selectors from '../../redux/contacts/contacts-selectors';\r\n\r\nexport default function Contacts() {\r\n  const contacts = useSelector(selectors.getVisibleContacts);\r\n  const isLoading = useSelector(selectors.isLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(operations.getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"contacts__list\">\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className=\"contacts__item\" key={id}>\r\n            <p className=\"contacts__name\">{name}</p>\r\n            <p>{number}</p>\r\n            <button\r\n              type=\"button\"\r\n              className=\"delete__btn\"\r\n              onClick={() => dispatch(operations.deleteContact(id))}\r\n            >\r\n              Delete contact\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {isLoading && (\r\n        <Loader type=\"Oval\" color=\"#ffa600\" height={80} width={80} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Form from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport Contacts from 'components/Contacts/Contacts';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <section className=\"section\">\n        <h1>Phonebook</h1>\n        <Form />\n      </section>\n\n      <section className=\"section\">\n        <h2>Contacts</h2>\n        <Filter />\n        <Contacts />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport * as action from './contacts-action';\r\n\r\nconst items = createReducer([], {\r\n  [action.getContactsSuccess]: (_, { payload }) => payload,\r\n  [action.addContactsSuccess]: (state, { payload }) => [\r\n    ...state,\r\n    payload,\r\n  ],\r\n  [action.deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [action.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [action.getContactsRequest]: () => true,\r\n  [action.getContactsSuccess]: () => false,\r\n  [action.getContactsError]: () => false,\r\n  [action.addContactsRequest]: () => true,\r\n  [action.addContactsSuccess]: () => false,\r\n  [action.addContactsError]: () => false,\r\n  [action.deleteContactsRequest]: () => true,\r\n  [action.deleteContactsSuccess]: () => false,\r\n  [action.deleteContactsError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [action.addContactsError]: (_, { payload }) => payload.message,\r\n  [action.getContactsError]: (_, { payload }) => payload.message,\r\n  [action.deleteContactsError]: (_, { payload }) => payload.message,\r\n  [action.addContactsError]: () => null,\r\n  [action.getContactsError]: () => null,\r\n  [action.deleteContactsError]: () => null,\r\n  [action.changeFilter]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\n\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst myMiddleware = store => next => action => {\r\n  next(action);\r\n};\r\n\r\nconst middleware = [...getDefaultMiddleware(), myMiddleware];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}